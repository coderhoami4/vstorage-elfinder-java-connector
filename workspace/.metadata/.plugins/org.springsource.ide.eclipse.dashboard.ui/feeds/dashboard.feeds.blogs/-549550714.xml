<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2016-09-08T14:13:49Z</updated>
  <entry>
    <title>Spring for Apache Kafka 1.1.0 Milestone 2 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/08/spring-for-apache-kafka-1-1-0-milestone-2-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2016-09-08:2607</id>
    <updated>2016-09-08T14:13:49Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I am pleased to announce that the second milestone for Spring for Apache Kafka version 1.1.0.M2 is now available in the &lt;a href="https://repo.spring.io/milestone"&gt;spring milestone repo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This includes some bug fixes and the following new features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The ability to process a batch of messages (&lt;a href="https://spring.io/blog/2016/08/23/spring-for-apache-kafka-1-1-0-milestone-1-available"&gt;introduced in the last milestone&lt;/a&gt;) is now available when using the &lt;code&gt;@KafkaListener&lt;/code&gt; annotation, for example&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@KafkaListener(id = "list", topics = "myTopic",
                          containerFactory = "batchFactory")
public void listen(List&amp;lt;String&amp;gt; list) {
    ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can now perform seek operations from the listener - this allows setting an initial offset when partitions are assigned by Kafka when using group management.
You can also perform arbitrary seek operations after initialization.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;KafkaTemplate&lt;/code&gt; now provides access to the &lt;code&gt;metrics&lt;/code&gt; and &lt;code&gt;partitionsFor&lt;/code&gt; methods on the &lt;code&gt;Producer&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In addition, the first milestone of &lt;code&gt;spring-integration-kafka&lt;/code&gt; version 2.1 is now available, utilizing the &lt;code&gt;spring-kafka&lt;/code&gt; 1.1.0.M2 version.
It also supports batch payloads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See the &lt;a href="http://projects.spring.io/spring-kafka/"&gt;project page&lt;/a&gt; for links to documentation and more information.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Stream Brooklyn.RC1 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/08/spring-cloud-stream-brooklyn-rc1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marius Bogoevici</name>
    </author>
    <id>tag:spring.io,2016-09-08:2608</id>
    <updated>2016-09-08T13:59:36Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce the release of the first release candidate of the &lt;a href="http://cloud.spring.io/spring-cloud-stream"&gt;Spring Cloud Stream&lt;/a&gt; Brooklyn release train. Spring Cloud Stream Brooklyn.RC1 is available for use in the &lt;a href="http://repo.spring.io/libs-milestone-local/org/springframework/cloud/spring-cloud-stream-dependencies/Brooklyn.RC1"&gt;Spring Milestone repository&lt;/a&gt;, a detailed description of its features can be found in the &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.RC1/reference/htmlsingle/"&gt;reference documentation&lt;/a&gt;. Release notes are available &lt;a href="https://github.com/spring-cloud/spring-cloud-stream-starters/wiki/Brooklyn-Release-Notes"&gt;here&lt;/a&gt; and include important information on the migration path.&lt;/p&gt;
&lt;p&gt;As this release follows closely the previous &lt;a href="https://spring.io/blog/2599-spring-cloud-stream-brooklyn-m1-is-available/edit"&gt;milestone release&lt;/a&gt; it contains a small number of fixes, and one major addition, which is support for Kafka 0.10 via &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.RC1/reference/htmlsingle/#_using_the_binder_with_apache_kafka_0_10"&gt;drop-in dependency replacement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We plan to have a general availability release in the next couple of weeks. &lt;/p&gt;
&lt;p&gt;Due to the timeline, the following features (which were intended for 1.1.0.RELEASE) will be deferred to version 1.2 (development on which will start soon after the GA release):&lt;br/&gt;- add support for Reactive binders (including reactive producers and consumers, such as the ones introduced by the &lt;a href="https://github.com/reactor/reactor-kafka"&gt;Reactor Kafka&lt;/a&gt; project);&lt;br/&gt;- add support for developing applications using the &lt;a href="http://kafka.apache.org/documentation.html#streams"&gt;Kafka Stream API&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either in &lt;a href="https://github.com/spring-cloud/spring-cloud-stream"&gt;GitHub&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud-stream"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/springcloudoss"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Session 1.2.2 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/07/spring-session-1-2-2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-09-07:2606</id>
    <updated>2016-09-07T19:36:01Z</updated>
    <content type="html">&lt;p&gt;I&amp;rsquo;m pleased to announce the release of Spring Session 1.2.2.RELEASE. &lt;a href="https://github.com/spring-projects/spring-session/issues?q=milestone%3A1.2.2"&gt;This release contains&lt;/a&gt; numerous bug fixes and trivial enhancements. Some of the highlights include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fixes and improvements for supporting &lt;a href="http://docs.spring.io/spring-session/docs/current/reference/html5/#httpsession-multi"&gt;multiple sessions&lt;/a&gt; in the same browser when working with Tomcat 8.5 &lt;a href="https://github.com/spring-projects/spring-session/issues/605"&gt;#605&lt;/a&gt; &lt;a href="https://github.com/spring-projects/spring-session/issues/611"&gt;#611&lt;/a&gt; &lt;a href="https://github.com/spring-projects/spring-session/issues/615"&gt;#615&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Improvements for JDBC support to work with DB2 &lt;a href="https://github.com/spring-projects/spring-session/pull/600"&gt;#600&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-session/issues/594"&gt;Unregistered GemFire Instantiator causes deserialization issues on app restarts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-session/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-session/docs/current/reference/html5/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;Help&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 6th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/06/this-week-in-spring-september-6th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-09-06:2605</id>
    <updated>2016-09-06T03:35:24Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;m in Shanghai, China and Hangzhou, China where I spoke at the &lt;em&gt;ginormous&lt;/em&gt; Huawei Connect conference in Shanghai and where I&amp;rsquo;ll be working with Alibaba and Huawei for a week or so. I&amp;rsquo;ll also be speaking at the Hangzhou Java User Group, too. &lt;/p&gt;
&lt;p&gt;(Can you believe we&amp;rsquo;re already in September?? Seriously blown away! 2017 is just around the corner!)&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m also, technically, on vacation, so I&amp;rsquo;ll keep this post to a minimum! :) &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring REST Docs lead Andy Wilkinson &lt;a href="https://spring.io/blog/2016/08/31/spring-rest-docs-1-1-2-release"&gt;has just announced Spring REST Docs 1.1.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Security ninja Joe Grandja just announced a &lt;a href="https://spring.io/blog/2016/08/31/spring-security-oauth2-client-authentication-issue"&gt;very important fix for Spring Security OAuth 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring ninja St¨¦phane Nicoll put together a &lt;em&gt;very&lt;/em&gt; interesting article on how &lt;a href="https://spring.io/blog/2016/08/30/custom-test-slice-with-spring-boot-1-4"&gt;to write a custom spring Boot test &lt;em&gt;slice&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;our buddy Eugene is back at it again, with updates to his guide on &lt;a href="http://www.baeldung.com/spring-cloud-netflix-hystrix"&gt;using Spring Cloud&amp;rsquo;s Netflix Hystrix support&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;learn more about &lt;a href="https://www.iancollington.com/centralised-configuration-using-spring-boot/"&gt;Spring Cloud&amp;rsquo;s Config Server&lt;/a&gt; in this nice post from Ian Collington.&lt;/li&gt;
  &lt;li&gt;I love &lt;a href="http://www.forbes.com/sites/andrewcave/2016/08/31/paul-maritzs-vision-for-pivotal-and-the-battle-with-amazon-over-open-source-cloud-computing"&gt;this Forbes.com interview with Paul Maritz&lt;/a&gt; (Pivotal&amp;rsquo;s founding CEO, current-chairman, former top Microsoft executive, and former VMWare CEO on his dreams&lt;/li&gt;
  &lt;li&gt;I&amp;rsquo;m honored to be included on &lt;a href="http://techbeacon.com/java-leaders-you-should-follow-twitter"&gt;a TechBeacon roundup of Java folks in the Twitterverse you might like to follow&lt;/a&gt;. The list is pretty good. About half of those people are &lt;em&gt;definitely&lt;/em&gt; worth a follow, so check it out!&lt;/li&gt;
  &lt;li&gt;I did a Chinese-language &lt;a href="http://www.infoq.com/cn/news/2016/09/bug-fix-speed-matters-microservi"&gt;interview with InfoQ on microservices and cloud-native applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;this isn&amp;rsquo;t a Pivotal project, per se, but I thought it interesting; Netflix&amp;rsquo;s just announced a new tool &lt;a href="http://techblog.netflix.com/2016/09/netflix-data-benchmark-benchmarking.html"&gt;called NDBench Runner that helps to benchmark data stores&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;This is interesting: a thin JavaScript library called Hybind &lt;a href="http://www.swisspush.org/web/2016/08/30/spring-data-rest-hybind"&gt;to bind to Spring Data REST / HATEOAS hypermedia resources&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The Baeldung blog has a nice post &lt;a href="http://www.baeldung.com/swagger-2-documentation-for-spring-rest-api"&gt;on setting up Swagger with a Spring REST API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;There are multiple ways to acheive CORS in a Spring MVC application. If you&amp;rsquo;re using an older variant of Spring MVC, before Spring Framework 4.2, then this post on &lt;a href="http://www.veli.io/enable-cors-spring-boot"&gt;creating a &lt;code&gt;javax.servlet.Filter&lt;/code&gt; will work ideally&lt;/a&gt;. Otherwise, check out &lt;a href="https://spring.io/guides/gs/rest-service-cors/"&gt;this Spring guide on CORS&lt;/a&gt; and &lt;a href="https://spring.io/blog/2015/06/08/cors-support-in-spring-framework"&gt;this Spring announcement blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;wow! this is an exhaustive look &lt;a href="http://www.dineshonjava.com/2016/08/spring-boot-actuator-complete-guide.html#.V84zypN96EI"&gt;at Spring Boot&amp;rsquo;s Actuator&lt;/a&gt; on the &lt;em&gt;Dinesh on Java&lt;/em&gt; blog.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring REST Docs 1.1.2.RELEASE</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/31/spring-rest-docs-1-1-2-release" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2016-08-31:2604</id>
    <updated>2016-08-31T11:07:16Z</updated>
    <content type="html">&lt;p&gt;It&amp;rsquo;s my pleasure to announce that &lt;a href="https://github.com/spring-projects/spring-restdocs"&gt;Spring REST Docs&lt;/a&gt; 1.1.2.RELEASE is available from Maven Central, JCenter, and our &lt;a href="https://repo.spring.io/release"&gt;release repository&lt;/a&gt;. My thanks to everyone who contributed to this release by reporting bugs and opening pull requests.&lt;/p&gt;
&lt;p&gt;This maintenance release includes a &lt;a href="https://github.com/spring-projects/spring-restdocs/issues?q=milestone%3A1.1.2.RELEASE"&gt;number of bug fixes&lt;/a&gt; and is a recommend upgrade for all Spring REST Docs users. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-restdocs"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-restdocs"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-restdocs/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-restdocs/docs/1.1.2.RELEASE"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Security OAuth2 - Client Authentication Issue</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/31/spring-security-oauth2-client-authentication-issue" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Joe Grandja</name>
    </author>
    <id>tag:spring.io,2016-08-25:2598</id>
    <updated>2016-08-31T11:07:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Issue &lt;a href="https://github.com/spring-projects/spring-security-oauth/issues/808"&gt;#808&lt;/a&gt; was recently reported that allowed a user to authenticate as a client and obtain an access token via the client_credentials or password grant flow.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This unique scenario occurs when a client and user have the same identifier (clientId and username). The user&amp;#8217;s credentials are used for client authentication during a client_credentials or password grant flow and is successful in obtaining an access token with the authorities of the client.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="the-fix"&gt;&lt;a class="anchor" href="#the-fix"&gt;&lt;/a&gt;The Fix&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This bug has been fixed in &lt;a href="https://github.com/spring-projects/spring-security-oauth/commit/1ed986a8486ab4e84295ee5d0260c790c573e7d7"&gt;1ed986a&lt;/a&gt; and released in 2.0.11.RELEASE.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you¡¯re using Java-based configuration, please update to 2.0.11.RELEASE.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;However, if you¡¯re using XML-based configuration, please take the following actions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Update to 2.0.11.RELEASE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Look at this &lt;a href="https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/java/org/springframework/security/oauth2/config/xml/AuthorizationServerClientCredentialsPasswordValidXmlTests.java"&gt;JUnit test&lt;/a&gt; and it¡¯s associated &lt;a href="https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/resources/org/springframework/security/oauth2/config/xml/authorization-server-client-credentials-password-valid.xml"&gt;XML configuration&lt;/a&gt; to ensure the &lt;code&gt;AuthenticationManager&lt;/code&gt; for &lt;strong&gt;client authentication&lt;/strong&gt; and the &lt;code&gt;AuthenticationManager&lt;/code&gt; for &lt;strong&gt;user authentication&lt;/strong&gt; is setup the same in your configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As a precautionary step, make sure your XML configuration is &lt;strong&gt;NOT&lt;/strong&gt; setup the same as in this &lt;a href="https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/java/org/springframework/security/oauth2/config/xml/AuthorizationServerClientCredentialsPasswordInvalidXmlTests.java"&gt;JUnit test&lt;/a&gt; and associated &lt;a href="https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/resources/org/springframework/security/oauth2/config/xml/authorization-server-client-credentials-password-invalid.xml"&gt;XML configuration&lt;/a&gt; as it demonstrates the original issue.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="credit"&gt;&lt;a class="anchor" href="#credit"&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Thank you for reporting this issue &lt;a href="https://github.com/socket70"&gt;Michael Pridemore&lt;/a&gt; and &lt;a href="https://github.com/benkiefer"&gt;Ben Kiefer&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Custom test slice with Spring Boot 1.4</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/30/custom-test-slice-with-spring-boot-1-4" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>St¨¦phane Nicoll</name>
    </author>
    <id>tag:spring.io,2016-08-23:2590</id>
    <updated>2016-08-30T09:31:12Z</updated>
    <content type="html">&lt;p&gt;Spring Boot 1.4 includes a major overhaul of testing support and one of these features is &lt;em&gt;test slicing&lt;/em&gt;. I&amp;rsquo;d like to take the opportunity in this blog post to further explain what it is and how you can easily create your own slices.&lt;/p&gt;
&lt;p&gt;Test slicing is about segmenting the &lt;code&gt;ApplicationContext&lt;/code&gt; that is created for your test. Typically, if you want to test a controller using &lt;code&gt;MockMvc&lt;/code&gt;, surely you don&amp;rsquo;t want to bother with the data layer. Instead you&amp;rsquo;d probably want to &lt;em&gt;mock&lt;/em&gt; the service that your controller uses and validate that all the web-related interaction works as expected. This can be summarized in the example below:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@RunWith(SpringRunner.class)&#xD;
@WebMvcTest(UserVehicleController.class)&#xD;
public class UserVehicleControllerTests {&#xD;
&#xD;
    @Autowired&#xD;
    private MockMvc mvc;&#xD;
&#xD;
    @MockBean&#xD;
    private UserVehicleService userVehicleService;&#xD;
&#xD;
    @Test&#xD;
    public void testExample() throws Exception {&#xD;
        given(this.userVehicleService.getVehicleDetails(&amp;quot;sboot&amp;quot;))&#xD;
                .willReturn(new VehicleDetails(&amp;quot;Honda&amp;quot;, &amp;quot;Civic&amp;quot;));&#xD;
        this.mvc.perform(get(&amp;quot;/sboot/vehicle&amp;quot;).accept(MediaType.TEXT_PLAIN))&#xD;
                .andExpect(status().isOk()).andExpect(content().string(&amp;quot;Honda Civic&amp;quot;));&#xD;
    }&#xD;
&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;@WebMvcTest&lt;/code&gt; is the web test slice in Spring Boot 1.4. When it is present, you instruct Spring Boot that a web environment is required and that only the specified controller(s) should be instantiated. Because it knows about the nature of the test, it can take additional smart decisions for you (e.g. auto-configure &lt;code&gt;MockMvc&lt;/code&gt; so that all that&amp;rsquo;s left is to inject it). Also, your controller has a dependency towards &lt;code&gt;UserVehicleService&lt;/code&gt; so starting the context would lead to a failure because the &lt;code&gt;ApplicationContext&lt;/code&gt; doesn&amp;rsquo;t know about it (remember, only the web infrastructure and &lt;code&gt;UserVehicleController&lt;/code&gt; are known). &lt;code&gt;@MockBean&lt;/code&gt; is used here to register a &lt;code&gt;UserVehicleService&lt;/code&gt; mock so that it can be transparently injected in the controller.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s now have a look to the implementation to better understand how Spring Boot manages this for you. Our first stop is &lt;code&gt;@WebMvcTest&lt;/code&gt; (removing &lt;code&gt;@Target&lt;/code&gt; and friends for brievety):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@BootstrapWith(WebMvcTestContextBootstrapper.class)&#xD;
@OverrideAutoConfiguration(enabled = false)&#xD;
@TypeExcludeFilters(WebMvcTypeExcludeFilter.class)&#xD;
@AutoConfigureCache&#xD;
@AutoConfigureWebMvc&#xD;
@AutoConfigureMockMvc&#xD;
@ImportAutoConfiguration&#xD;
public @interface WebMvcTest { ... }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This declaration can be split in 3 areas:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Auto-configuration customizations&lt;/li&gt;
  &lt;li&gt;Classpath scanning tuning&lt;/li&gt;
  &lt;li&gt;Test bootstrap&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#auto-configuration-customizations" class="anchor" name="auto-configuration-customizations"&gt;&lt;/a&gt;Auto-configuration customizations&lt;/h2&gt;
&lt;p&gt;Spring Boot 1.4 now defines a &lt;code&gt;spring-boot-test-autoconfigure&lt;/code&gt; module that provides a collection of test-related auto-configurations. These auto-configurations are composable and can help you crafting your own infrastructure easily. &lt;/p&gt;
&lt;p&gt;Back to &lt;code&gt;@WebMvcTest&lt;/code&gt;, the first thing we want to do is to disable the default auto-configuration: &lt;code&gt;OverrideAutoConfiguration&lt;/code&gt; does that. Because the default auto-configuration is now disabled, you have to opt-in for the relevant auto-configurations you want to include. The three &lt;code&gt;AutoConfigure&lt;/code&gt; annotations do that for us: they make sure that a web environment is available, &lt;code&gt;MockMvc&lt;/code&gt; is configured and a no-op cache manager is available. Let&amp;rsquo;s have a look to an excerpt of &lt;code&gt;AutoconfigureMockMvc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@ImportAutoConfiguration&#xD;
@PropertyMapping(&amp;quot;spring.test.mockmvc&amp;quot;)&#xD;
public @interface AutoConfigureMockMvc {&#xD;
&#xD;
    boolean addFilters() default true;&#xD;
&#xD;
    @PropertyMapping(&amp;quot;webclient.enabled&amp;quot;)&#xD;
    boolean webClientEnabled() default true;&#xD;
&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;@ImportAutoConfiguration&lt;/code&gt; is an annotation that lists the auto-configurations that should be included. Alternatively, you can provide the list in &lt;code&gt;META-INF/spring.factories&lt;/code&gt; using the fully qualified name of the annotation for the key. This is what&amp;rsquo;s defined for &lt;code&gt;AutoConfigureMockMvc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc=\&#xD;
org.s.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration,\&#xD;
org.s.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration,\&#xD;
org.s.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration,\&#xD;
org.s.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You get the idea: each annotation brings some auto-configurations and you can compose them any way you want. You&amp;rsquo;ll notice that &lt;code&gt;WebMvcTest&lt;/code&gt; has also a &lt;code&gt;ImportAutoConfiguration&lt;/code&gt; but there&amp;rsquo;s no entry in &lt;code&gt;spring.factories&lt;/code&gt; for it. Spring Boot will scan all &lt;code&gt;spring.factories&lt;/code&gt; in the classpath and &lt;em&gt;merge&lt;/em&gt; the content if necessary. If a module of yours wants to add additional behaviour to &lt;code&gt;@WebMvcTest&lt;/code&gt; (or &lt;code&gt;@AutoConfigureMockMvc&lt;/code&gt;), all that&amp;rsquo;s required is to create a &lt;code&gt;META-INF/spring.factories&lt;/code&gt; and register additional auto-configuration classes. You can also use &lt;code&gt;@AutoconfigureBefore&lt;/code&gt; and &lt;code&gt;@AutoconfigureAfter&lt;/code&gt; to order them.&lt;/p&gt;
&lt;p&gt;Test auto-configurations are configurable as usual: the &lt;code&gt;@PropertyMapping&lt;/code&gt; annotation at class-level maps the attributes of the annotation to the &lt;code&gt;Environment&lt;/code&gt; so that the auto-configuration code can extract the value and adapt the configuration accordingly. We can see the &lt;code&gt;webClientEnabled&lt;/code&gt; attribute above is transparently used in the auto-configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@ConditionalOnProperty(prefix = &amp;quot;spring.test.mockmvc.webclient&amp;quot;, &#xD;
        name = &amp;quot;enabled&amp;quot;, matchIfMissing = true)&#xD;
public class MockMvcWebClientAutoConfiguration { ... }
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#classpath-scanning-tuning" class="anchor" name="classpath-scanning-tuning"&gt;&lt;/a&gt;Classpath scanning tuning&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;TypeExcludeFilters&lt;/code&gt; is a way to tune classpath scanning. In the case of &lt;code&gt;@WebMvcTest&lt;/code&gt; we&amp;rsquo;re only going to &lt;a href="https://github.com/spring-projects/spring-boot/blob/bbc91cc03f5df31c1985811d07abe4f9a906355e/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/servlet/WebMvcTypeExcludeFilter.java"&gt;include certain web-related components&lt;/a&gt; and ignore all the rest. This is quite powerful as you can use classpath scanning the usual way and only include what&amp;rsquo;s required for your slice.&lt;/p&gt;&lt;h2&gt;&lt;a href="#test-bootstrap" class="anchor" name="test-bootstrap"&gt;&lt;/a&gt;Test bootstrap&lt;/h2&gt;
&lt;p&gt;Finally, the new test bootstrap makes sure to identify the &lt;code&gt;@SpringBootApplication&lt;/code&gt; annotated class in your project (unless one is specified). This is a nice default as you don&amp;rsquo;t have to specify it anymore and classpath scanning will be right &lt;em&gt;by default&lt;/em&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#creating-your-own-slice" class="anchor" name="creating-your-own-slice"&gt;&lt;/a&gt;Creating your own slice&lt;/h2&gt;
&lt;p&gt;Based on this knowledge, creating your own slice is actually pretty easy. An example of such slice could be a new &lt;code&gt;DataJdbcTest&lt;/code&gt;, a slice similar to &lt;code&gt;DataJpaTest&lt;/code&gt; that only configures &lt;code&gt;JdbcTemplate&lt;/code&gt; and does not use JPA. If you want to play with the code right the way, check the &lt;a href="https://github.com/snicoll-scratches/demo-data-jdbc-test"&gt;github repository&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Our first step is to create &lt;code&gt;@AutoconfigureDataJdbc&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;package com.example.test.autoconfigure.jdbc;&#xD;
&#xD;
import java.lang.annotation.*;&#xD;
import org.springframework.boot.autoconfigure.ImportAutoConfiguration;&#xD;
&#xD;
@Target(ElementType.TYPE)&#xD;
@Retention(RetentionPolicy.RUNTIME)&#xD;
@Documented&#xD;
@ImportAutoConfiguration&#xD;
public @interface AutoconfigureDataJdbc {&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and register the relevant auto-configurations to apply when this annotation is present. Again, create a &lt;code&gt;META-INF/spring.factories&lt;/code&gt; resource:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;com.example.test.autoconfigure.jdbc.AutoconfigureDataJdbc=\&#xD;
org.s.boot.autoconfigure.flyway.FlywayAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.transaction.TransactionAutoConfiguration
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once that reusable infrastructure is in place, you can create your test slice and simply specify that you need a database and jdbc:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@BootstrapWith(SpringBootTestContextBootstrapper.class)&#xD;
@OverrideAutoConfiguration(enabled = false)&#xD;
@TypeExcludeFilters(DataJdbcTypeExcludeFilter.class)&#xD;
@Transactional&#xD;
@AutoConfigureCache&#xD;
@AutoconfigureDataJdbc&#xD;
@AutoConfigureTestDatabase&#xD;
@ImportAutoConfiguration&#xD;
public @interface DataJdbcTest { }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/snicoll-scratches/demo-data-jdbc-test/blob/d0c0eaaecfc048a7543a86f3e9c91804eabad6e0/src/main/java/com/example/test/autoconfigure/jdbc/DataJdbcTypeExcludeFilter.java#L13"&gt;&lt;code&gt;DataJdbcTypeExcludeFilter&lt;/code&gt;&lt;/a&gt; makes sure to exclude all your other services as such test shouldn&amp;rsquo;t require any of your beans by default. It could be improve to allow services to be defined as a parameter of the annotation, pretty much like &lt;code&gt;WebMvcTest&lt;/code&gt; adds specified controller(s).&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve done that, you only need to add your annotation and your &lt;code&gt;JdbcTemplate&lt;/code&gt; is auto-configured for you with a test database:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@RunWith(SpringRunner.class)&#xD;
@DataJdbcTest&#xD;
public class DataJdbcSampleTests {&#xD;
&#xD;
    @Autowired&#xD;
    private JdbcTemplate jdbcTemplate;&#xD;
&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#summary" class="anchor" name="summary"&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;Spring Boot 1.4 brings auto-configuration to your tests and allows you to easily compose your own test annotations. In this article we&amp;rsquo;ve seen how &lt;code&gt;WebMvcTest&lt;/code&gt; works and how you could create your own &amp;ldquo;jdbc&amp;rdquo; slice. We&amp;rsquo;re actually &lt;a href="https://github.com/spring-projects/spring-boot/issues/6563"&gt;considering adding that annotation in the next release&lt;/a&gt; so please &lt;a href="gitter.im/spring-projects/spring-boot"&gt;keep the feedback coming&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - August 30th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/30/this-week-in-spring-august-30th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-08-30:2603</id>
    <updated>2016-08-30T09:27:49Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;ve been in San Francisco, (where I live and) where I addressed the Silicon Valley Spring User Group. Now it&amp;rsquo;s off to beautiful China to bring some Spring and Pivotal (and, maybe, take a little vacation!)&lt;/p&gt;
&lt;p&gt;As usual, we have a &lt;em&gt;lot&lt;/em&gt; to get to so let&amp;rsquo;s!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring ninja Greg Turnquist has just announced &lt;a href="https://spring.io/blog/2016/08/29/spring-web-services-2-3-1-2-4-0-are-released"&gt;that Spring Web Services 2.3.1 and 2.4.0 are now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud ninja Marcin Grzejszczak just announced &lt;a href="https://spring.io/blog/2016/08/29/spring-cloud-camden-m1-is-available"&gt;that Spring Cloud Camden M1 is now available &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Data Flow ninja Thomas Risberg just announced &lt;a href="https://spring.io/blog/2016/08/26/spring-cloud-data-flow-for-mesos-1-0-rc2-released"&gt;that Spring Cloud Data Flow for Mesos 1.0.RC2 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Marius Bogoevici just announced Spring Cloud Stream Brooklyn M1 is now available. This release is &lt;a href="https://spring.io/blog/2016/08/26/spring-cloud-stream-brooklyn-m1-is-available"&gt;packed full of new features including support for reactive programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Data Flow ninja Eric Bottard just announced &lt;a href="https://spring.io/blog/2016/08/25/spring-cloud-data-flow-for-cloud-foundry-goes-1-0-ga"&gt;that Spring Cloud Data Flow for Cloud Foundry 1.0. has gone GA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/08/24/check-your-spring-security-saml-config-xxe-security-issue"&gt;if you&amp;rsquo;re using Spring Security SAML, you should check out this security update&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Security lead Rob Winch &lt;a href="https://spring.io/blog/2016/08/24/spring-security-4-1-3-released"&gt;just announced Spring Security 4.1.3, packed full of fixes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Recent Spring Cloud team addition Ryan Baxter &lt;a href="https://spring.io/blog/2016/08/23/spring-cloud-brixton-sr5-is-available"&gt;just announced Spring Cloud Brixton SR5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Integration lead Gary Russell just announced that &lt;a href="https://spring.io/blog/2016/08/23/spring-for-apache-kafka-1-1-0-milestone-1-available"&gt;Spring for Apache Kafka 1.1.0 M1 is now available.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I put on a 4 hour long workshop in Singapore introducing &lt;a href="https://www.youtube.com/watch?v=JUqZxUlixSw"&gt;Spring Boot, Spring Cloud, Spring Coud Data Flow, Spring Cloud Security and Spring Security OAuth. The whole thing was recorded and is available online here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;on August 14th, Reno Chou came to one of my &lt;em&gt;Cloud Native Java&lt;/em&gt; talks in China and started writing up some of the information discussed in a series of blogs. Here are his &lt;a href="http://blog.itmuch.com/article/13"&gt;first&lt;/a&gt; and &lt;a href="http://blog.itmuch.com/article/15"&gt;second&lt;/a&gt; Chinese-language installments. Very cool Reno!&lt;/li&gt;
  &lt;li&gt;I Antoine&amp;rsquo;s French language post detailing how he migrated &lt;a href="http://javaetmoi.com/2016/08/migrer-vers-spring-boot/"&gt;the Spring Petclinic application from Spring 4 to Spring Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cool! Vojtech Ruzicka put together a nice review of his &lt;a href="http://vojtechruzicka.com/pivotal-certified-spring-web-application-developer-notes/"&gt;experience with the Pivotal Certified Spring Web Application Developer exam&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I liked Tim Spann&amp;rsquo;s post on &lt;a href="https://community.hortonworks.com/articles/53629/writing-a-spring-boot-microservices-to-access-hive.html"&gt;using Spring Boot to access data from Apache Hive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Web Services 2.3.1/2.4.0 are released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/29/spring-web-services-2-3-1-2-4-0-are-released" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Greg Turnquist</name>
    </author>
    <id>tag:spring.io,2016-08-29:2602</id>
    <updated>2016-08-29T16:09:21Z</updated>
    <content type="html">&lt;p&gt;Greetings Spring community,&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-ws/"&gt;Spring Web Services&lt;/a&gt; has just released versions 2.3.1.RELEASE and 2.4.0.RELEASE. &lt;/p&gt;
&lt;p&gt;2.3.1.RELEASE is a minor patch release. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10060&amp;version=15557"&gt;2.3.1 Release Notes&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-ws/docs/2.3.1.RELEASE/reference/htmlsingle/"&gt;2.3.1 Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;2.4.0.RELEASE rebases Spring Web Services to run on Spring Framework 4.2.x &amp;amp; Spring Security 4.0.x, the stable baselines behind Spring 4.3/Spring Security 4.1. At the same time, it remains compatible with Java 7. This version includes changes to the code base making it forward compatible with Spring 4.3 and 5.0, so you are free to move up to whichever version of Spring/Spring Security you wish to use.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10060&amp;version=15716"&gt;2.4.0 Release Notes&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-ws/docs/2.4.0.RELEASE/reference/htmlsingle/"&gt;2.4.0 Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to some tunings in our build, there are now CI jobs building every commit against Spring 4.2, 4.3, and 5.0. You can sleep at night know the code has been tested against your favorite version of Spring. Easy migration paths are a must for the Spring community.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-ws/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-ws"&gt;GitHub&lt;/a&gt; | &lt;a href="https://jira.spring.io/browse/SWS"&gt;Issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The artifacts are staged on maven central, &lt;a href="http://repo.spring.io/release"&gt;http://repo.spring.io/release&lt;/a&gt;, and bintray.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Camden M1 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/29/spring-cloud-camden-m1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marcin Grzejszczak</name>
    </author>
    <id>tag:spring.io,2016-08-29:2601</id>
    <updated>2016-08-29T12:19:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Milestone 1 of the &lt;a href="https://cloud.spring.io"&gt;Spring Cloud Camden&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="https://repo.spring.io/milestone/"&gt;Spring Milestone&lt;/a&gt; repository. We¡¯ve made numerous enhancements and bug fixes! You can check out the &lt;code&gt;Camden.M1&lt;/code&gt; &lt;a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Camden-Release-Notes"&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following modules were updated as part of Camden.M1:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;Spring Cloud Build        1.2.0.RELEASE
Spring Cloud Stream       Brooklyn.M1
Spring Cloud Bus          1.2.0.M1
Spring Cloud Config       1.2.0.M1
Spring Cloud Netflix      1.2.0.M1
Spring Cloud Consul       1.1.0.M1
Spring Cloud Contract     1.0.0.M2
Spring Cloud CLI          1.2.0.M1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The combined release train docs are available &lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud/"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on Stack Overflow, or on Twitter.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only)&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;&amp;lt;repositories&amp;gt;&#xD;
    &amp;lt;repository&amp;gt;&#xD;
        &amp;lt;id&amp;gt;spring-milestones&amp;lt;/id&amp;gt;&#xD;
        &amp;lt;name&amp;gt;Spring Milestones&amp;lt;/name&amp;gt;&#xD;
        &amp;lt;url&amp;gt;http://repo.spring.io/milestone&amp;lt;/url&amp;gt;&#xD;
        &amp;lt;snapshots&amp;gt;&#xD;
            &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&#xD;
        &amp;lt;/snapshots&amp;gt;&#xD;
    &amp;lt;/repository&amp;gt;&#xD;
&amp;lt;/repositories&amp;gt;&#xD;
&amp;lt;dependencyManagement&amp;gt;&#xD;
  &amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;version&amp;gt;Camden.M1&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
    &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
  &amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;&#xD;
&amp;lt;dependencies&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  ...&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;buildscript {&#xD;
  dependencies {&#xD;
    classpath &amp;quot;io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE&amp;quot;&#xD;
  }&#xD;
}&#xD;
repositories {&#xD;
    maven {&#xD;
        url &amp;#39;http://repo.spring.io/milestone&amp;#39;&#xD;
    }&#xD;
}&#xD;
apply plugin: &amp;quot;io.spring.dependency-management&amp;quot;&#xD;
&#xD;
dependencyManagement {&#xD;
  imports {&#xD;
    mavenBom &amp;#39;org.springframework.cloud:spring-cloud-dependencies:Camden.M1&amp;#39;&#xD;
  }&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-eureka&amp;#39;&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Mesos 1.0 RC2 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/26/spring-cloud-data-flow-for-mesos-1-0-rc2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Thomas Risberg</name>
    </author>
    <id>tag:spring.io,2016-08-26:2600</id>
    <updated>2016-08-26T20:01:27Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce the 1.0.0.RC2 release candidate of Spring Cloud Data Flow for Mesos, a team effort that encompasses many new features under the hood.&lt;/p&gt;
&lt;p&gt;This release candidate builds upon the recent 1.0 GA release of Spring Cloud Data Flow. Some highlights include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We now run the Spring Cloud Data Flow Server as a Docker image on Marathon, a container orchestration platform for Mesos.&lt;/li&gt;
  &lt;li&gt;This release adds features to support stream partitioning and scaling&lt;br/&gt;&lt;ul&gt;&lt;li&gt;Currently partitioning and scaling of sinks and processors are handled by using multiple application deployments, one for each app instance, identified by an index appended to the name.&lt;/li&gt;&lt;br/&gt;&lt;li&gt;Scaling of sources is handled by using additional application instances.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Streams are now deployed using Marathon &lt;a href="https://mesosphere.github.io/marathon/docs/application-groups.html"&gt;Application Groups&lt;/a&gt; so it is easier to identify the different apps making up a stream.&lt;/li&gt;
  &lt;li&gt;We have added support for launching tasks using Chronos, a fault tolerant job scheduler for Mesos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As part of this effort we have developed a simple Java client for interacting with the Chronos API. This &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-mesos/tree/master/src/main/java/org/springframework/cloud/mesos/chronos/client"&gt;Java client&lt;/a&gt; is included in the latest 1.0.2.RELEASE version of the &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-mesos"&gt;Spring Cloud Deployer for Mesos project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started using Spring Cloud Data Flow for Mesos &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-mesos/docs/1.0.0.RC2/reference/htmlsingle/#_getting_started"&gt;follow these steps&lt;/a&gt; outlined in the reference documentation.&lt;/p&gt;
&lt;p&gt;For a complete list of changes and improvements, please refer to the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-mesos/issues?q=milestone%3A1.0.0.RC2"&gt;1.0.0.RC2 issues&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Stream Brooklyn.M1 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/26/spring-cloud-stream-brooklyn-m1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marius Bogoevici</name>
    </author>
    <id>tag:spring.io,2016-08-26:2599</id>
    <updated>2016-08-26T19:19:39Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce the release of the first milestone of the &lt;a href="http://cloud.spring.io/spring-cloud-stream"&gt;Spring Cloud Stream&lt;/a&gt; Brooklyn release train. Spring Cloud Stream Brooklyn.M1 is available for use in the &lt;a href="http://repo.spring.io/libs-milestone-local/org/springframework/cloud/spring-cloud-stream-dependencies/Brooklyn.M1"&gt;Spring Milestone repository&lt;/a&gt;, a detailed description of its features can be found in the &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.M1/reference/htmlsingle/"&gt;reference documentation&lt;/a&gt;. Release notes are available &lt;a href="https://github.com/spring-cloud/spring-cloud-stream-starters/wiki/Brooklyn-Release-Notes"&gt;here&lt;/a&gt; and include important information on the migration path.&lt;/p&gt;&lt;h2&gt;&lt;a href="#from-a-monolith-to-a-release-train" class="anchor" name="from-a-monolith-to-a-release-train"&gt;&lt;/a&gt;From a Monolith to a Release Train&lt;/h2&gt;
&lt;p&gt;Spring Cloud Stream Brooklyn.M1 succeeds Spring Cloud Stream 1.0. The change in the naming scheme reflects the project&amp;rsquo;s structural changes, in particular switching from a monolithic structure, where the core components and the binder implementations are contained together, to a more decentralized one. In the new structure, the core and binder implementations are separate projects, with their own release cadence. A release train BOM aggregates the release components together and manages their versions.&lt;/p&gt;
&lt;p&gt;The benefits of this approach are twofold. On one hand, it allows adding new features and fixes to individual implementations at a faster rate. On the other, it lowers the barrier for creating and developing new binders, which as they mature, can become part of a future release train themselves by simply being added to the release train BOM. Finally, it is only fitting for a project that targets the development of microservices not to be a monolith itself!&lt;/p&gt;
&lt;p&gt;The following components are part of the Brooklyn.M1 release train:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Cloud Stream 1.1.0.M1 (core components)&lt;/li&gt;
  &lt;li&gt;Spring Cloud Stream Kafka Binder 1.1.0.M1&lt;/li&gt;
  &lt;li&gt;Spring Cloud Stream Rabbit Binder 1.1.0.M1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s see what the new release brings.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-is-new" class="anchor" name="what-is-new"&gt;&lt;/a&gt;What is new ?&lt;/h2&gt;
&lt;p&gt;Spring Cloud Stream Brooklyn.M1 brings some major upgrades to existing components, and introduces new features targeted towards programming model, application interoperability, and the overall developer experience.&lt;/p&gt;&lt;h3&gt;&lt;a href="#apache-kafka-0-9-new-consumer-support" class="anchor" name="apache-kafka-0-9-new-consumer-support"&gt;&lt;/a&gt;Apache Kafka 0.9 new consumer support&lt;/h3&gt;
&lt;p&gt;The Apache Kafka Binder has been upgraded to use the Kafka new consumer library (introduced with version 0.9), based on &lt;a href="https://projects.spring.io/spring-kafka/"&gt;Spring Kafka&lt;/a&gt; 1.0.x and &lt;a href="https://github.com/spring-projects/spring-integration-kafka"&gt;Spring Integration Kafka&lt;/a&gt; 2.0.x, and currently supports Apache Kafka 0.9. The use of the new client library adds a few benefits:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Applications using the Apache Kafka Binder do not have to have &lt;code&gt;spring.cloud.stream.instanceIndex&lt;/code&gt; set. The new consumer library will take care of assigning partitions to all the instances which are part of a given consumer group, and rebalancing when new instances join or leave - useful especially for scaling consumer applications at runtime. For users that wish to still use a static partition allocation scheme, we will support it by the final release ( &lt;code&gt;spring.cloud.stream.instanceIndex&lt;/code&gt; will still be required in that case).&lt;/li&gt;
  &lt;li&gt;Support for &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.M1/reference/htmlsingle/#_example_security_configuration"&gt;secured clients with SSL and Kerberos&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The abstractions of Spring Kafka and Spring Integration Kafka will also make adding support for Apache Kafka 0.10 easier too, and it is expected that the final release will support Kafka 0.10 as well.&lt;/p&gt;&lt;h3&gt;&lt;a href="#reactive-programming-support-with-java-8" class="anchor" name="reactive-programming-support-with-java-8"&gt;&lt;/a&gt;Reactive programming support (with Java 8)&lt;/h3&gt;
&lt;p&gt;In addition to the Spring Integration application model and the &lt;code&gt;@StreamListener&lt;/code&gt; present in version 1.0, this release introduces support for &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.M1/reference/htmlsingle/#_reactive_programming_support"&gt;reactive APIs&lt;/a&gt;, based on &lt;a href="http://projectreactor.io"&gt;Project Reactor&lt;/a&gt;. This feature requires the use of Java 8.&lt;/p&gt;
&lt;p&gt;Applications can add the &lt;code&gt;spring-cloud-stream-reactive&lt;/code&gt; module as a dependency, enabling the use of reactive types directly as the programming abstraction. In the context of data processing, a functional and reactive programming model is extremely attractive because of the declarative and expressive nature of a reactive composition API, which lets the developer focus on what to do, not how. On the other hand, while processing messages individually is a classic paradigm for enterprise integration, when it comes to stream processing, a developer also needs to think about processing a continuous inbound stream of messages, and describe operations that make sense only in that context, like windowing - by time, or count.&lt;/p&gt;
&lt;p&gt;Here is an example of a reactive processor for counting words (for determining the most popular tags in the last 5 seconds, every second).&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@StreamListener&#xD;
@Output(Processor.OUTPUT)&#xD;
public Flux&amp;lt;WordCount&amp;gt; count (@Input(Processor.Input) Flux&amp;lt;String&amp;gt; flux) {&#xD;
  return flux.window(ofSeconds(5), ofSeconds(1))&#xD;
    .flatMap(window -&amp;gt;&#xD;
      window.groupBy(word -&amp;gt; word)&#xD;
        .flatMap(group -&amp;gt; group.reduce(0, (count,word) -&amp;gt; count + 1)&#xD;
          .map(count -&amp;gt; new WordCount(group.key(), count))));&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additionally, the use of a reactive API allows to integrate with other reactive components, such as reactive web controllers. For a more comprehensive overview of upcoming reactive support in Spring, watch Stephane Maldini and Rossen Stoyanchev&amp;rsquo;s &lt;a href="https://www.youtube.com/watch?v=Xm-KjMY_Z_w"&gt;keynote at Spring One Platform 2016&lt;/a&gt;, one of the other Reactive talks at Spring One Platform, or read Dave Syer&amp;rsquo;s &lt;a href="https://spring.io/blog/2016/06/07/notes-on-reactive-programming-part-i-the-reactive-landscape"&gt;blog series&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;a href="#avro-serialization-and-schema-evolution-support" class="anchor" name="avro-serialization-and-schema-evolution-support"&gt;&lt;/a&gt;Avro serialization and schema evolution support&lt;/h3&gt;
&lt;p&gt;Spring Cloud Stream Brooklyn.M1 is also adding support for Avro and schema evolution. Starting with this release, applications can include the &lt;code&gt;spring-cloud-stream-schema&lt;/code&gt; module, which contains &lt;code&gt;MessageConverters&lt;/code&gt; with Apache Avro.&lt;/p&gt;
&lt;p&gt;The Apache Avro serializers support both &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.M1/reference/htmlsingle/#_apache_avro_message_converters"&gt;fixed schemas&lt;/a&gt;, as well as &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.M1/reference/htmlsingle/#_avro_schema_registry_client_message_converters"&gt;dynamically interacting with a schema registry&lt;/a&gt;. You can make your applications interact with a schema registry, by simply adding &lt;code&gt;@EnableSchemaRegistryClient&lt;/code&gt; to your application and setting the &lt;code&gt;application/*+avro&lt;/code&gt; content type on your outbound channels, so that data is sent in Apache Avro format. With this, publisher applications will register schemas for the messages they send, and pass metadata about the subject and version to consumers. Based on that, a consumer can retrieve the writer&amp;rsquo;s schema from the registry and deserialize the messages it received, even if the schema wasn&amp;rsquo;t known to them beforehand.&lt;/p&gt;
&lt;p&gt;This is an important feature for microservice evolution, as it allows the different components of your system to upgrade or change their schemas and data formats, without breaking the existing ones.&lt;/p&gt;
&lt;p&gt;The release includes a &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.M1/reference/htmlsingle/#_schema_registry_server"&gt;schema registry server&lt;/a&gt; and a general-purpose &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.M1/reference/htmlsingle/#_schema_registry_client"&gt;schema registry client&lt;/a&gt;. An implementation of the schema registry client for the &lt;a href="http://docs.confluent.io/2.0.0/schema-registry/docs/index.html"&gt;Confluent schema registry&lt;/a&gt; is available as well.&lt;/p&gt;
&lt;p&gt;Special thanks to &lt;a href="https://twitter.com/vccarvalho"&gt;Vinicius Carvalho&lt;/a&gt; for contributing the schema evolution support!&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-is-next" class="anchor" name="what-is-next"&gt;&lt;/a&gt;What is next ?&lt;/h2&gt;
&lt;p&gt;In the following weeks, we will continue the development of the Brooklyn release train, with a goal of producing a release candidate. As it is customary with milestones, some API changes are to be expected until the RC. Here are a few intended additional features before the final release:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;add support for Apache Kafka 0.10 via a simple drop-in replacement of the Spring Kafka library with version 1.1;&lt;/li&gt;
  &lt;li&gt;add support for Reactive binders (including reactive producers and consumers, such as the ones introduced by the &lt;a href="https://github.com/reactor/reactor-kafka"&gt;Reactor Kafka&lt;/a&gt; project);&lt;/li&gt;
  &lt;li&gt;add support for developing applications using the &lt;a href="http://kafka.apache.org/documentation.html#streams"&gt;Kafka Stream API&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, as always, we welcome feedback: either in &lt;a href="https://github.com/spring-cloud/spring-cloud-stream"&gt;GitHub&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud-stream"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/springcloudoss"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Cloud Foundry goes 1.0 GA</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/25/spring-cloud-data-flow-for-cloud-foundry-goes-1-0-ga" />
    <category term="releases" label="Releases" />
    <author>
      <name>Eric Bottard</name>
    </author>
    <id>tag:spring.io,2016-08-25:2597</id>
    <updated>2016-08-25T18:34:32Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;We are pleased to announce the general availability of Spring Cloud Data Flow for Cloud Foundry version 1.0.0.RELEASE.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Cloud Data Flow for Cloud Foundry provides support for orchestrating long-running (streaming) and short-lived (task/batch) data microservices on Cloud Foundry runtime.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As the successor to Spring XD, this project benefits from a much more decoupled architecture, leveraging the Spring Cloud &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-cloudfoundry"&gt;Deployer for Cloud Foundry&lt;/a&gt; library, which also goes GA today. More details about Spring Cloud Data Flow&amp;#8217;s architecture and its ecosystem can be found in &lt;a href="https://blog.pivotal.io/big-data-pivotal/products/data-goes-cloud-native-with-the-new-spring-cloud-data-flow"&gt;this blog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stream and Batch/Task Processing are the primary functionalities in Spring Cloud Data Flow and they map to Cloud Foundry Diego&amp;#8217;s &lt;a href="https://docs.cloudfoundry.org/concepts/diego/diego-auction.html#processes"&gt;LRPs and Tasks&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Includes developer toolkits to build streaming and batch/task pipelines using the DSL, Shell, REST-APIs, Dashboard, Flo Designer, or any combination of those.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Facilitates test-driven-development at individual data pipeline components along with test fixtures to develop and test "data-centric" apps in isolation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leverages Cloud Foundry&amp;#8217;s runtime capabilities such as security, metrics, operational monitoring, scaling, and reliable execution of streaming and batch/task pipelines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The reference documentation includes a &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-cloudfoundry/docs/1.0.0.RELEASE/reference/html/migration-guide.html"&gt;migration guide&lt;/a&gt; from XD to Data Flow&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Please refer to the &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-cloudfoundry/docs/1.0.0.RELEASE/reference/htmlsingle/#getting-started"&gt;Getting Started&lt;/a&gt; section of the documentation after you&amp;#8217;ve &lt;a href="http://repo.spring.io/release/org/springframework/cloud/spring-cloud-dataflow-server-cloudfoundry/1.0.0.RELEASE/spring-cloud-dataflow-server-cloudfoundry-1.0.0.RELEASE.jar"&gt;downloaded&lt;/a&gt; the 1.0.0.RELEASE of the server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Make sure to read the core Spring Cloud Data Flow&amp;#8217;s &lt;a href="https://spring.io/blog/2016/07/12/spring-cloud-data-flow-1-0-ga-released"&gt;release-blog&lt;/a&gt; to learn more about all the feature capabilities&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;(1) Task support is an experimental feature available on Cloud Foundry 1.7.12+ only&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Check your Spring Security SAML config - XXE security issue</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/24/check-your-spring-security-saml-config-xxe-security-issue" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-08-24:2596</id>
    <updated>2016-08-24T19:30:48Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;It was brought to our attention that the &lt;a href="https://github.com/spring-projects/spring-security-saml/tree/10fdc14bbc4bb9c2516cf6e8f71000b2243016c7/sample"&gt;spring-security-saml sample&lt;/a&gt; application contained an &lt;a href="https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing"&gt;XML External Entity (XXE) vulnerability&lt;/a&gt;. This meant that a malicious user could view any file that the Spring Application&amp;#8217;s process had access to.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The issue was a direct result of &lt;a href="https://shibboleth.net/community/advisories/secadv_20131213.txt"&gt;OpenSAML Java ParserPool and Decrypter Vulnerable To XML Attacks&lt;/a&gt;. The default behavior of the &lt;code&gt;ParserPool&lt;/code&gt; implementations is fixed in OpenSAML 2.6.1+ (which Spring Security SAML uses). However, the vulnerability is still possible if users construct their own &lt;code&gt;ParserPool&lt;/code&gt; without the proper settings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonitionblock note"&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class="icon"&gt;
&lt;div class="title"&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class="content"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We did not consider this a &lt;a href="https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"&gt;CVE&lt;/a&gt; because the exploit was only found in the sample application which is not considered production code. However, we expect that our users may have copied this code to create their own applications. For this reason, we wanted to be transparent and communicate the issue and the fix.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="the-fix"&gt;&lt;a class="anchor" href="#the-fix"&gt;&lt;/a&gt;The Fix&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The sample application has been fixed in &lt;a href="https://github.com/spring-projects/spring-security-saml/commit/925c8925fa0d0645d7b177b6e65cfb920fc6782f"&gt;925c892&lt;/a&gt; by removing the customizations to the &lt;code&gt;ParserPool&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Users should ensure that any applications using OpenSAML have been fixed according to the &lt;strong&gt;Recommendations&lt;/strong&gt; section within the &lt;a href="https://shibboleth.net/community/advisories/secadv_20131213.txt"&gt;OpenSAML Security Advisory&lt;/a&gt;. Commit &lt;a href="https://github.com/spring-projects/spring-security-saml/commit/925c8925fa0d0645d7b177b6e65cfb920fc6782f"&gt;925c892&lt;/a&gt; can be used as a model of one way of conforming to the &lt;strong&gt;Recommendations&lt;/strong&gt; section.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="additional-information"&gt;&lt;a class="anchor" href="#additional-information"&gt;&lt;/a&gt;Additional Information&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet"&gt;OWASP XXE Prevention Cheat Sheet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://shibboleth.net/community/advisories/secadv_20131213.txt"&gt;OpenSAML Security Advisory&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="credit"&gt;&lt;a class="anchor" href="#credit"&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This issue was responsibly disclosed by Max Justicz and Nick Freeman of Bishop Fox (&lt;a href="https://www.bishopfox.com" class="bare"&gt;https://www.bishopfox.com&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Cloud Foundry 1.0.0.RC1 now available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/24/spring-cloud-data-flow-for-cloud-foundry-1-0-0-rc1-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Eric Bottard</name>
    </author>
    <id>tag:spring.io,2016-08-24:2595</id>
    <updated>2016-08-24T08:53:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;We are pleased to announce the 1.0.0.RC1 release of Spring Cloud Data Flow for Cloud Foundry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As we near completion towards a GA release in the upcoming days, this milestone brings the following improvements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Builds upon the 1.0.0.RC1 release of Spring Cloud Deployer Cloud Foundry, which itself builds upon Project Reactor 3.0.0.RELEASE and of CF-Java-Client 2.0.0.RELEASE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds the ability to orchestrate short-lived &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-cloudfoundry/docs/1.0.0.RC1/reference/htmlsingle/#tasks-on-cloudfoundry"&gt;tasks&lt;/a&gt; including Spring Batch Jobs in Cloud Foundry, which can be enabled as an &lt;em&gt;experimental&lt;/em&gt; feature toggle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds support for command line arguments as a separate set of properties to be passed to a Task when it&amp;#8217;s launched&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds support to separate stream and task specific service bindings. This allows pinning stream and tasks specific services to stream and task applications respectively&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds the ability to override the buildpack used on a per-app deployment basis&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Significant improvements to the Spring Cloud Deployer Cloud Foundry TCK test coverage allowed refinements in app-state calculation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds documentation about rolling upgrades and how to &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-cloudfoundry/docs/1.0.0.RC1/reference/htmlsingle/#_using_spring_cloud_config_server"&gt;integrate&lt;/a&gt; with Spring Cloud Config Server "service" in Pivotal Cloud Foundry&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;At this point, we&amp;#8217;re hoping to promote this Release Candidate milestone to GA, expecting only minor fixes and documentation updates. If you use SCDF for CF, we strongly encourage you to upgrade to this release and give it a try.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 4.1.3 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/24/spring-security-4-1-3-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-08-24:2594</id>
    <updated>2016-08-24T00:39:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce the release of Spring Security 4.1.3.RELEASE which updates libraries &amp;amp; resolves some minor issues including fixes for the new &lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.x/reference/htmlsingle/#mvc-requestmatcher"&gt;MvcRequestMatcher&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For details refer to the &lt;a href="https://github.com/spring-projects/spring-security/issues?q=is%3Aclosed+milestone%3A4.1.3"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="contributions" class="sect0"&gt;&lt;a class="anchor" href="#contributions"&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Without the community we couldn&amp;#8217;t be the successful project we are today. I&amp;#8217;d like to thank everyone that created issues &amp;amp; provided feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="feedback-please" class="sect0"&gt;&lt;a class="anchor" href="#feedback-please"&gt;&lt;/a&gt;Feedback Please&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you have feedback on this release, I encourage you to reach out via &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;StackOverflow&lt;/a&gt;, &lt;a href="https://github.com/spring-projects/spring-security/issues"&gt;GitHub Issues&lt;/a&gt;, or via the comments section. You can also ping me &lt;a href="https://twitter.com/rob_winch"&gt;@rob_winch&lt;/a&gt; or Joe &lt;a href="https://twitter.com/joe_grandja"&gt;@joe_grandja&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Of course the best feedback comes in the form of &lt;a href="https://github.com/spring-projects/spring-security/blob/master/CONTRIBUTING.md"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.3.RELEASE/reference/htmlsingle/"&gt;Reference&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/4.1.3.RELEASE/guides/html5/"&gt;Guides&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Brixton.SR5 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/23/spring-cloud-brixton-sr5-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Ryan Baxter</name>
    </author>
    <id>tag:spring.io,2016-08-23:2593</id>
    <updated>2016-08-23T20:46:51Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Service Release 5 of the &lt;a href="http://cloud.spring.io"&gt;Spring Cloud Brixton&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="http://repo.spring.io/release"&gt;Spring Release repository&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-cloud-dependencies%22"&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release includes primarily bug fixes.&lt;/p&gt;
&lt;p&gt;This release also deprecates &lt;a href="https://github.com/spring-cloud/spring-cloud-cluster"&gt;Spring Cloud Cluster&lt;/a&gt; in favor of &lt;a href="https://projects.spring.io/spring-integration/"&gt;Spring Integration&lt;/a&gt;.&lt;/p&gt;&lt;h4&gt;&lt;a href="#the-following-modules-were-updated-as-part-of-brixton-sr5" class="anchor" name="the-following-modules-were-updated-as-part-of-brixton-sr5"&gt;&lt;/a&gt;The following modules were updated as part of Brixton.SR5:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Cloud Bus &lt;a href="https://github.com/spring-cloud/spring-cloud-bus/milestone/13?closed=1"&gt;1.1.1.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Config &lt;a href="https://github.com/spring-cloud/spring-cloud-config/milestone/21?closed=1"&gt;1.1.3.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud AWS &lt;a href="https://github.com/spring-cloud/spring-cloud-aws/milestone/12?closed=1"&gt;1.1.1.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Sleuth &lt;a href="https://github.com/spring-cloud/spring-cloud-sleuth/milestone/12?closed=1"&gt;1.0.6.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Task &lt;a href="https://github.com/spring-cloud/spring-cloud-task/milestone/7?closed=1"&gt;1.0.2.RELEASE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloudOSS"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring for Apache Kafka 1.1.0 Milestone 1 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/23/spring-for-apache-kafka-1-1-0-milestone-1-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2016-08-23:2592</id>
    <updated>2016-08-23T18:06:11Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I am pleased to announce that the Spring for Apache Kafka
&lt;a href="https://github.com/spring-projects/spring-kafka/milestone/5?closed=1"&gt;1.1.0.M1&lt;/a&gt; milestone release &lt;a href="http://projects.spring.io/spring-kafka/"&gt;is available now&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As usual, thanks to the community for any feedback and contribution as always!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Highlights of this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Support for the 0.10.x.x client (use 1.0.x for the 0.9.x.x client)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for listeners that receive the entire batch of messages returned by the &lt;code&gt;consumer.poll()&lt;/code&gt; operation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for &lt;code&gt;null&lt;/code&gt; payloads - used to delete keys when using log compaction&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow setting the initial offset to be relative to the current offset&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-kafka/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-kafka"&gt;GitHub&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-kafka"&gt;Help&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-kafka/reference/htmlsingle/"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - August 23, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/23/this-week-in-spring-august-23-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-08-23:2591</id>
    <updated>2016-08-23T13:57:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installation of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;m in &lt;a href="http://www.meetup.com/JavaSIG/events/233368316/"&gt;NYC (for the NYC Java SIG)&lt;/a&gt;, Austin and &lt;a href="http://www.meetup.com/SV-SUG/events/231931166/"&gt;San Francisco (for the Silicon Valley Spring User Group)&lt;/a&gt; talking to customers and doing meetups! We&amp;rsquo;ve got a &lt;em&gt;lot&lt;/em&gt; to cover, as usual, so let&amp;rsquo;s get to it!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spinnaker is a continuous delivery platform from Netflix built on Spring Boot. It supports a build-and-bake pipeline and works naturally with Spring Boot and various cloud platforms. It&amp;rsquo;s enjoyed contributions from Microsoft, Google and Pivotal. In this post, &lt;a href="https://spring.io/blog/2016/08/19/spring-cloud-spinnaker-1-0-0-m1"&gt;Spring ninja Greg Turnquist introduces Spring Cloud Spinnaker 1.0.0.M1&lt;/a&gt;. Definitely worth a look!&lt;/li&gt;
  &lt;li&gt;this seemed interesting - a code generator &lt;a href="https://blog.codesifu.com/getting-started-with-Sifu-for-the-first-time.html"&gt;that supports Spring-based applications called Sifu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;JAX London just announced their top 20 social influencers for Java. &lt;a href="https://jaxlondon.com/top-20-social-influencers-in-java/"&gt;Spring Data lead Oliver Gierke and I made the list&lt;/a&gt;. This is awesome and I&amp;rsquo;m sure I speak for Oliver in saying we&amp;rsquo;re honored to be included :-) There are a lot of other cool folks down there on that list, too, so I&amp;rsquo;m pretty stoked to be counted among them!&lt;/li&gt;
  &lt;li&gt;Marco V?lz has been putting together a nice series on what&amp;rsquo;s &lt;a href="https://medium.com/@voelzmo"&gt;new in BOSH, the system&amp;rsquo;s orchestration engine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Good news everybody! &lt;a href="https://twitter.com/pivotal/status/767850955408805889"&gt;Many of the SpringOne Platform videos and content are available now!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cool! &lt;a href="https://github.com/consulthys/springbeat"&gt;An ElasticSearch Beat implementation for Spring Boot applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I liked Luanne Misquitta&amp;rsquo;s post on &lt;a href="https://dzone.com/articles/build-spring-data-neo4j-41-applications-like-a-sup"&gt;building Spring Data Neo4J 4.1 applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;there&amp;rsquo;s an interesting post on &lt;a href="http://twitter.com/gostormpath"&gt;Stormpath&lt;/a&gt;: &lt;a href="https://stormpath.com/blog/tutorial-spring-boot-war-files"&gt;Using Spring Boot to Build and Deploy &lt;code&gt;.war&lt;/code&gt; files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;this is an interesting post on using Spring Boot and Let&amp;rsquo;s Encrypt to seamlessly &lt;a href="https://dzone.com/articles/spring-boot-secured-by-lets-encrypt"&gt;setup encryption for a Spring Boot application&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Rafael Salerno&amp;rsquo;s got a nice post up on &lt;a href="https://dzone.com/articles/spring-cloud-netflix-how-works-service-registratio"&gt;using Spring Cloud Netflix for service registration and discovery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Spinnaker 1.0.0.M1</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/19/spring-cloud-spinnaker-1-0-0-m1" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Greg Turnquist</name>
    </author>
    <id>tag:spring.io,2016-08-19:2586</id>
    <updated>2016-08-19T16:02:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Greetings Spring community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;I am happy to release the first milestone for &lt;a href="https://github.com/spring-cloud/spring-cloud-spinnaker"&gt;Spring Cloud Spinnaker&lt;/a&gt;. Spring Cloud Spinnaker bundles up the &lt;a href="http://www.spinnaker.io/"&gt;continuous delivery Spinnaker platform&lt;/a&gt;, and provides a 1-click installer to let you install it to any &lt;a href="https://www.cloudfoundry.org/use/cloud-foundry-certified/"&gt;certified Cloud Foundry provider&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;At this year&amp;#8217;s SpringOne Platform 2016 conference, there were two talks about Spinnaker. If you have early release access and missed them, you can watch right now. Otherwise you can catch them on the &lt;a href="http://spring.io/video"&gt;SpringDeveloper YouTube Channel&lt;/a&gt; once they are published.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If your team/meetup/JUG is interested in hearing more about Spinnaker, &lt;a href="https://spring.io/team/gturnquist"&gt;check in with me&lt;/a&gt; and we can arrange a Google Hangout.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Cheers,&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-spinnaker"&gt;Source&lt;/a&gt; | &lt;a href="https://circleci.com/gh/spring-cloud/spring-cloud-spinnaker"&gt;PR CI&lt;/a&gt; | &lt;a href="https://jenkins.spring.io/view/All/job/spring-cloud-spinnaker/"&gt;Master CI&lt;/a&gt; | &lt;a href="http://www.spinnaker.io/docs"&gt;Docs&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spinnaker"&gt;Questions&lt;/a&gt; | &lt;a href="http://join.spinnaker.io/"&gt;Slack&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
</feed>
